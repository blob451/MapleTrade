# Generated by Django 4.2.7

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                
                # Custom fields
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('risk_tolerance', models.CharField(choices=[('conservative', 'Conservative'), ('moderate', 'Moderate'), ('aggressive', 'Aggressive')], default='moderate', max_length=20)),
                ('default_analysis_period', models.IntegerField(default=6, help_text='Default analysis period in months')),
                ('is_premium', models.BooleanField(default=False, help_text='Whether user has premium access')),
                ('last_analysis_date', models.DateTimeField(blank=True, help_text='Last time user ran an analysis', null=True)),
                ('total_analyses_count', models.IntegerField(default=0, help_text='Total number of analyses performed')),
                
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'db_table': 'mapletrade_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserPortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Portfolio name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Portfolio description')),
                ('is_default', models.BooleanField(default=False, help_text='Default portfolio for user')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolios', to='users.user')),
            ],
            options={
                'db_table': 'mapletrade_portfolios',
            },
        ),
        migrations.CreateModel(
            name='PortfolioStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('added_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, help_text='User notes about this stock')),
                ('shares', models.DecimalField(blank=True, decimal_places=4, help_text='Number of shares owned', max_digits=12, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=4, help_text='Average purchase price', max_digits=12, null=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='users.userportfolio')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.stock')),
            ],
            options={
                'db_table': 'mapletrade_portfolio_stocks',
            },
        ),
        migrations.AddIndex(
            model_name='userportfolio',
            index=models.Index(fields=['user'], name='mapletrade__user_id_7c2445_idx'),
        ),
        migrations.AddIndex(
            model_name='userportfolio',
            index=models.Index(fields=['is_default'], name='mapletrade__is_defa_496818_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userportfolio',
            unique_together={('user', 'name')},
        ),
        migrations.AddIndex(
            model_name='portfoliostock',
            index=models.Index(fields=['stock'], name='mapletrade__stock_i_33a959_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliostock',
            index=models.Index(fields=['added_date'], name='mapletrade__added_d_dcfe69_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='portfoliostock',
            unique_together={('portfolio', 'stock')},
        ),
    ]